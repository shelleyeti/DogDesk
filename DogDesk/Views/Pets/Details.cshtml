@model DogDesk.Models.Pet

@{
    ViewData["Title"] = "Details";
}

<h3>Pet Information</h3>
<br />

<div class="btn-group">
    <div>
        @using (Html.BeginForm("Create", "VetRecords", FormMethod.Get))
{
            <input type="hidden" asp-for="Id" name="PetId" />
            <input class="btn btn-sm btn-primary mr-sm-4" type="submit" value="Add New Vet Record" />
}
    </div>
    <div>
        @using (Html.BeginForm("MainCalendar", "ServicePets", FormMethod.Get))
{
            <input type="hidden" asp-for="Id" name="PetId" />
            <input class="btn btn-sm btn-secondary mr-sm-4" type="submit" value="Schedule Boarding" />
}
    </div>
    <div>
        @using (Html.BeginForm("TimeLineCalendar", "ServicePets", FormMethod.Get))
{
            <input type="hidden" asp-for="Id" name="PetId" />
            <input class="btn btn-sm btn-info mr-sm-4" type="submit" value="Schedule Add-On Service" />
}
    </div>
    <div>
        @using (Html.BeginForm("AddOwner", "Owners", FormMethod.Get))
{
            <input type="hidden" asp-for="Id" name="PetId" />
            <input class="btn btn-sm btn-warning mr-sm-4" type="submit" value="Add New Owner" />
}
    </div>
    <div>
        @using (Html.BeginForm("Create", "EmergencyContacts", FormMethod.Get))
{
            <input type="hidden" asp-for="Id" name="PetId" />
            <input class="btn btn-sm btn-danger mr-sm-4" type="submit" value="Add New Contact" />
}
    </div>
</div>
<br />

<div class="form-group">
    <br />
    <form method="post" enctype="multipart/form-data" asp-controller="Pets" asp-action="UploadImage">
        <div class="form-group">
            <input type="hidden" asp-for="Id" name="PetId" />
            <div class="col-md-10">
                <p>Upload an image:</p>
                <input type="file" name="ImageFile">
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Upload">
            </div>
        </div>
    </form>

</div>
<br />

<div>
    <div class="row">
        <div class="col col-md-4">
            <h5>Details</h5>
            <div class="card bg-light">
                @if (!string.IsNullOrEmpty(Model.PetImage))
                {
                <img class="card-img-top" src="~/images/@Model.PetImage" alt="pet image">
                }
                <div class="card-body">
                    <h5 class="card-title font-weight-bold text-center"> @Html.DisplayFor(model => model.Name)</h5>
                    <p class="card-text">
                        @Html.LabelFor(model => model.GenderId, new { @class = "font-weight-bold mb-sm-0" }):
                        @Html.DisplayFor(model => model.GenderOfAnimal.Gender)
                    </p>
                    <p class="card-text">
                        @Html.LabelFor(model => model.BirthDate, new { @class = "font-weight-bold mb-sm-0" }):
                        @Html.DisplayFor(model => model.BirthDate)
                    </p>
                    <p class="card-text">
                        @Html.LabelFor(model => model.SizeId, new { @class = "font-weight-bold mb-sm-0" }):
                        @Html.DisplayFor(model => model.SizeOfAnimal.Size)
                    </p>
                    <p class="card-text">
                        @Html.LabelFor(model => model.AnimalTypeId, new { @class = "font-weight-bold mb-sm-0" }):
                        @Html.DisplayFor(model => model.TypeOfAnimal.Animal)
                    </p>
                    <p class="card-text">
                        @Html.LabelFor(model => model.Color1, new { @class = "font-weight-bold mb-sm-0" }):
                        @Html.DisplayFor(model => model.Color1)
                    </p>
                    <p class="card-text">
                        @Html.LabelFor(model => model.Color2, new { @class = "font-weight-bold mb-sm-0" }):
                        @Html.DisplayFor(model => model.Color2)
                    </p>
                    <p class="card-text">
                        @Html.LabelFor(model => model.Breed, new { @class = "font-weight-bold mb-sm-0" }):
                        @Html.DisplayFor(model => model.Breed)
                    </p>
                    <p class="card-text">
                        @Html.LabelFor(model => model.AmountFood, new { @class = "font-weight-bold mb-sm-0" }):
                        @Html.DisplayFor(model => model.AmountFood)
                    </p>
                    <p class="card-text">
                        @Html.LabelFor(model => model.PetNote, new { @class = "font-weight-bold mb-sm-0" }):
                        @Html.DisplayFor(model => model.PetNote)
                    </p>
                    <div class="text-center">
                        <a class="card-link" asp-controller="Pets" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
                        <span> | </span>
                        <a class="card-link" asp-controller="Pets" asp-action="Delete" asp-route-id="@Model.Id">Delete</a>
                    </div>
                    <input type="hidden" asp-for="Id" name="PetId" />
                </div>
            </div>

        </div>
        <div class="col col-sm-8">
            <h5>Upcoming Services</h5>
            @if (Model.ServicePets != null && Model.ServicePets.Count > 0 && Model.ServicePets.Any(x => x.CheckoutDate.Date >= DateTime.Now.Date))
            {
                <div class="card-columns">
            @foreach (var item in Model.ServicePets.Where(x => x.CheckoutDate.Date >= DateTime.Now.Date).OrderBy(x => x.StartDate))
            {
                <div>
                @{
                    var hasCurrentRabies = Model.VetRecords.FirstOrDefault(x => x.Rabies <= DateTime.Now && x.Rabies >= DateTime.Now.AddDays(-365)) != null;

                    var hasCurrentBordetella = true;

                    if (Model.AnimalTypeId == 1)
                    {
                        hasCurrentBordetella = Model.VetRecords.FirstOrDefault(x => x.Bordetella <= DateTime.Now && x.Bordetella >= DateTime.Now.AddDays(-365)) != null;
                    }

                    var hasCurrentVetRecord = hasCurrentRabies && hasCurrentBordetella;

                    var hasntReachedStartDate = item.StartDate.Date > DateTime.Now.Date;

                    var startDate = item.StartDate.Date == DateTime.Now.Date || item.StartDate.Date < DateTime.Now.Date;

                    var hasRecentCheckInDate = item.CheckinTime != default(DateTime) && item.CheckinTime.Date <= DateTime.Now.Date;

                    var noCheckOutTime = item.CheckoutTime == default(DateTime);

                    var notCheckedIn = item.CheckinTime == default(DateTime);
                }
                </div>

                <div class="card border-info">
                    <div class="card-header font-weight-bold text-center">
                        @Html.DisplayFor(modelItem => item.NameOfService.ServiceName)

                        @if (!hasCurrentVetRecord || hasntReachedStartDate)
                        {
                            @using (Html.BeginForm("Action", "Controller", FormMethod.Get))
                            {
                                <input type="hidden" asp-for="Id" name="PetId" />
                                <input class="btn btn-sm btn-info disabled" type="submit" disabled value="Check-In" />
                            }
                        }
                        else if (hasCurrentVetRecord && startDate && !hasRecentCheckInDate && notCheckedIn)
                        {
                            @using (Html.BeginForm("CheckInPet", "ServicePets", FormMethod.Post))
                            {
                                <input type="hidden" asp-for="Id" name="PetId" />
                                <input type="hidden" asp-for="@item.Id" name="Id" />
                                <input type="hidden" asp-for="@item.ServiceType" name="ServiceType" />
                                <input type="hidden" asp-for="@item.UserId" name="UserId" />
                                <input type="hidden" asp-for="@item.ServiceNote" name="ServiceNote" />
                                <input type="hidden" asp-for="@item.StartDate" name="StartDate" />
                                <input type="hidden" asp-for="@item.CheckoutDate" name="CheckoutDate" />

                                <input class="btn btn-sm btn-info" type="submit" value="Check-In" />
                            }
                        }
                        else if (hasCurrentVetRecord && noCheckOutTime && hasRecentCheckInDate)
                        {
                            @using (Html.BeginForm("CheckOutPet", "ServicePets", FormMethod.Post))
                            {
                                <input type="hidden" asp-for="Id" name="PetId" />
                                <input type="hidden" asp-for="@item.Id" name="Id" />
                                <input type="hidden" asp-for="@item.ServiceType" name="ServiceType" />
                                <input type="hidden" asp-for="@item.UserId" name="UserId" />
                                <input type="hidden" asp-for="@item.ServiceNote" name="ServiceNote" />
                                <input type="hidden" asp-for="@item.StartDate" name="StartDate" />
                                <input type="hidden" asp-for="@item.CheckoutDate" name="CheckoutDate" />
                                <input type="hidden" asp-for="@item.CheckinTime" name="CheckinTime" />

                                <input class="btn btn-sm btn-info" type="submit" value="Check-Out" />
                            }
                        }
                        else
                        {
                            @using (Html.BeginForm("Action", "Controller", FormMethod.Get))
                            {
                                <input type="hidden" asp-for="@item.Id" name="PetId" />
                                <input class="btn btn-sm btn-info" type="submit" disabled value="Complete" />
                            }
                        }

                    </div>

                    <div class="card-body">
                        <p class="card-text">
                            @Html.DisplayNameFor(model => model.ServicePets.FirstOrDefault().StartDate): @Html.DisplayFor(modelItem => item.StartDate)
                        </p>
                        <p class="card-text">
                            @Html.DisplayNameFor(model => model.ServicePets.FirstOrDefault().CheckoutDate): @Html.DisplayFor(modelItem => item.CheckoutDate)
                        </p>
                        <div class="text-center">
                            <input type="hidden" asp-for="Id" name="PetId" />
                            <a class="card-link" asp-controller="ServicePets" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                            <span> | </span>
                            <a class="card-link" asp-controller="ServicePets" asp-action="Details" asp-route-id="@item.Id"> Details </a>
                            <span> | </span>
                            <a class="card-link" asp-controller="ServicePets" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </div>
                    </div>
                </div>
            }
        </div>
            }
            else
            {
                <p>No Upcoming Services Scheduled</p>
            }
        </div>
        <br />
    </div>
</div>


<br />


@* Vet Records *@
<div>
    <h5>Vet Records</h5>
    @if (Model.VetRecords != null && Model.VetRecords.Count > 0)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.VetRecords.FirstOrDefault().VetName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.VetRecords.FirstOrDefault().StreetAddress)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.VetRecords.FirstOrDefault().City)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.VetRecords.FirstOrDefault().State)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.VetRecords.FirstOrDefault().ZipCode)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.VetRecords.FirstOrDefault().WorkPhone)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.VetRecords.FirstOrDefault().Allergy)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.VetRecords.FirstOrDefault().Altered)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.VetRecords.FirstOrDefault().Rabies)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.VetRecords.FirstOrDefault().Bordetella)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.VetRecords)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.VetName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StreetAddress)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.City)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.State)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ZipCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.WorkPhone)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Allergy)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Altered)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Rabies)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Bordetella)
                        </td>
                        <td>
                            <input type="hidden" asp-for="Id" name="PetId" />
                            <a asp-controller="VetRecords" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-controller="VetRecords" asp-action="Details" asp-route-id="@item.Id">Details</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No Vet Records Found</p>
    }
</div>
<br />

@* Owners *@
<div>
    <h5>Owners</h5>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.PetOwners.FirstOrDefault().Owner.FullName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PetOwners.FirstOrDefault().Owner.StreetAddress)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PetOwners.FirstOrDefault().Owner.City)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PetOwners.FirstOrDefault().Owner.State)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PetOwners.FirstOrDefault().Owner.ZipCode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PetOwners.FirstOrDefault().Owner.HomePhone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PetOwners.FirstOrDefault().Owner.CellPhone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PetOwners.FirstOrDefault().Owner.WorkPhone)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.PetOwners)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Owner.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Owner.StreetAddress)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Owner.City)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Owner.State)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Owner.ZipCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Owner.HomePhone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Owner.CellPhone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Owner.WorkPhone)
                    </td>
                    <td>
                        <input type="hidden" asp-for="Id" name="PetId" />
                        <a asp-controller="Owners" asp-action="Edit" asp-route-id="@item.OwnerId">Edit</a> |
                        <a asp-controller="Owners" asp-action="Details" asp-route-id="@item.OwnerId">Details</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<br />

@* Contacts *@
<div>
    <h5>Emergency Contacts</h5>
    @if (Model.PetContacts != null && Model.PetContacts.Count > 0)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.PetContacts.FirstOrDefault().EmergencyContact.FullName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PetContacts.FirstOrDefault().EmergencyContact.HomePhone)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PetContacts.FirstOrDefault().EmergencyContact.CellPhone)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PetContacts.FirstOrDefault().EmergencyContact.WorkPhone)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.PetContacts)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.EmergencyContact.FullName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EmergencyContact.HomePhone)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EmergencyContact.CellPhone)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EmergencyContact.WorkPhone)
                        </td>
                        <td class="text-right">
                            <input type="hidden" asp-for="Id" name="PetId" />
                            <a asp-controller="EmergencyContacts" asp-action="Edit" asp-route-id="@item.EmergencyContactId">Edit</a> |
                            <a asp-controller="EmergencyContacts" asp-action="Details" asp-route-id="@item.EmergencyContactId">Details</a> |
                            <a asp-controller="EmergencyContacts" asp-action="Delete" asp-route-id="@item.EmergencyContactId">Delete</a>

                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No Emergency Contacts Found</p>
    }
</div>
